name: On push to main

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  
jobs:
  sanity-check:
    name: Sanity check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Enable corepack and install dependencies
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Lint code
        run: yarn lint

      - name: Run unit tests
        run: yarn test:unit

      - name: Run integration tests
        run: yarn test:integration

  release:
    name: Release application
    runs-on: ubuntu-latest
    needs: sanity-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Enable corepack and install dependencies
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Build binaries
        run: yarn build

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release

  dockerize:
    name: Dockerize application
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to fetch tags

      - name: Get released tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Checkout code at tag
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_tag.outputs.tag }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::050752613795:role/STDServiceRoleForGitHub
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        id: build_image
        run: |
          GITHUB_REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/$GITHUB_REPO_NAME:${{ steps.get_tag.outputs.tag }}"
          docker build -t $GITHUB_REPO_NAME:${{ steps.get_tag.outputs.tag }} .
          docker tag $GITHUB_REPO_NAME:${{ steps.get_tag.outputs.tag }} $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.build_image.outputs.repo_name }}